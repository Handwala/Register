{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nexport const register = createAsyncThunk('users/register', async ({\n  first_name,\n  last_name,\n  email,\n  password\n}, thunkAPI) => {\n  const body = JSON.stringify({\n    first_name,\n    last_name,\n    email,\n    password\n  });\n  try {\n    const res = await fetch('/api/users/register', {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body\n    });\n    const data = await res.json();\n    if (res.status === 2001) {\n      return data;\n    } else {\n      return thunkAPI.rejectWithValue(data);\n    }\n  } catch (err) {\n    return thunkAPI.rejectWithValue(err.response.data);\n  }\n});\nconst initialState = {\n  isAuthenticated: false,\n  user: null,\n  loading: false,\n  registered: false\n};\nconst userSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {\n    resetRegistered: state => {\n      state.registered = false;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(register.pending, state => {\n      state.loading = true;\n    }).addCase(register.fulfilled, state => {\n      state.loading = false;\n      state.registered = true;\n    }).addCase(register.rejected, state => {\n      state.loading = false;\n    });\n  }\n});\nexport const {\n  resetRegistered\n} = userSlice.actions;\nexport default userSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","register","first_name","last_name","email","password","thunkAPI","body","JSON","stringify","res","fetch","method","headers","Accept","data","json","status","rejectWithValue","err","response","initialState","isAuthenticated","user","loading","registered","userSlice","name","reducers","resetRegistered","state","extraReducers","builder","addCase","pending","fulfilled","rejected","actions","reducer"],"sources":["C:/Users/Lenovo/OneDrive/Desktop/authentication2/frontend/client/src/features/user.js"],"sourcesContent":["import {  createAsyncThunk, createSlice } from '@reduxjs/toolkit'\r\n\r\n\r\n\r\n\r\nexport const register =  createAsyncThunk(\r\n  'users/register', \r\n  async({first_name,last_name,email,password}, thunkAPI) =>{\r\n    const body = JSON.stringify({\r\n      first_name,\r\n      last_name,\r\n      email,\r\n      password\r\n    })\r\n\r\n    try{\r\n      const res = await fetch('/api/users/register',{\r\n        method:'POST',\r\n        headers:{\r\n          Accept:'application/json',\r\n          'Content-Type':'application/json'\r\n        },\r\n        body\r\n      })\r\n\r\n      const data = await res.json();\r\n      if (res.status === 2001){\r\n        return data;\r\n      } else {\r\n        return thunkAPI.rejectWithValue(data);\r\n      }\r\n    } catch(err){\r\n      return thunkAPI.rejectWithValue(err.response.data);\r\n    }\r\n\r\n});\r\nconst initialState = { \r\n  isAuthenticated: false,\r\n  user: null,\r\n  loading: false,\r\n  registered: false,\r\n} \r\nconst userSlice = createSlice({\r\n  name: 'user',\r\n  initialState,\r\n  reducers: {\r\n   resetRegistered: state =>{\r\n    state.registered = false;\r\n   }, \r\n  },\r\n\r\n  extraReducers: builder =>{\r\n    builder\r\n    .addCase(register.pending, state =>{\r\n      state.loading = true;\r\n    })\r\n\r\n    .addCase(register.fulfilled, state =>{\r\n      state.loading = false;\r\n      state.registered = true;\r\n    })\r\n\r\n    .addCase(register.rejected, state =>{\r\n      state.loading = false;\r\n    })\r\n  }\r\n})\r\n\r\nexport const { resetRegistered } = userSlice.actions\r\nexport default userSlice.reducer"],"mappings":"AAAA,SAAUA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAKjE,OAAO,MAAMC,QAAQ,GAAIF,gBAAgB,CACvC,gBAAgB,EAChB,OAAM;EAACG,UAAU;EAACC,SAAS;EAACC,KAAK;EAACC;AAAQ,CAAC,EAAEC,QAAQ,KAAI;EACvD,MAAMC,IAAI,GAAGC,IAAI,CAACC,SAAS,CAAC;IAC1BP,UAAU;IACVC,SAAS;IACTC,KAAK;IACLC;EACF,CAAC,CAAC;EAEF,IAAG;IACD,MAAMK,GAAG,GAAG,MAAMC,KAAK,CAAC,qBAAqB,EAAC;MAC5CC,MAAM,EAAC,MAAM;MACbC,OAAO,EAAC;QACNC,MAAM,EAAC,kBAAkB;QACzB,cAAc,EAAC;MACjB,CAAC;MACDP;IACF,CAAC,CAAC;IAEF,MAAMQ,IAAI,GAAG,MAAML,GAAG,CAACM,IAAI,CAAC,CAAC;IAC7B,IAAIN,GAAG,CAACO,MAAM,KAAK,IAAI,EAAC;MACtB,OAAOF,IAAI;IACb,CAAC,MAAM;MACL,OAAOT,QAAQ,CAACY,eAAe,CAACH,IAAI,CAAC;IACvC;EACF,CAAC,CAAC,OAAMI,GAAG,EAAC;IACV,OAAOb,QAAQ,CAACY,eAAe,CAACC,GAAG,CAACC,QAAQ,CAACL,IAAI,CAAC;EACpD;AAEJ,CAAC,CAAC;AACF,MAAMM,YAAY,GAAG;EACnBC,eAAe,EAAE,KAAK;EACtBC,IAAI,EAAE,IAAI;EACVC,OAAO,EAAE,KAAK;EACdC,UAAU,EAAE;AACd,CAAC;AACD,MAAMC,SAAS,GAAG1B,WAAW,CAAC;EAC5B2B,IAAI,EAAE,MAAM;EACZN,YAAY;EACZO,QAAQ,EAAE;IACTC,eAAe,EAAEC,KAAK,IAAG;MACxBA,KAAK,CAACL,UAAU,GAAG,KAAK;IACzB;EACD,CAAC;EAEDM,aAAa,EAAEC,OAAO,IAAG;IACvBA,OAAO,CACNC,OAAO,CAAChC,QAAQ,CAACiC,OAAO,EAAEJ,KAAK,IAAG;MACjCA,KAAK,CAACN,OAAO,GAAG,IAAI;IACtB,CAAC,CAAC,CAEDS,OAAO,CAAChC,QAAQ,CAACkC,SAAS,EAAEL,KAAK,IAAG;MACnCA,KAAK,CAACN,OAAO,GAAG,KAAK;MACrBM,KAAK,CAACL,UAAU,GAAG,IAAI;IACzB,CAAC,CAAC,CAEDQ,OAAO,CAAChC,QAAQ,CAACmC,QAAQ,EAAEN,KAAK,IAAG;MAClCA,KAAK,CAACN,OAAO,GAAG,KAAK;IACvB,CAAC,CAAC;EACJ;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEK;AAAgB,CAAC,GAAGH,SAAS,CAACW,OAAO;AACpD,eAAeX,SAAS,CAACY,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}