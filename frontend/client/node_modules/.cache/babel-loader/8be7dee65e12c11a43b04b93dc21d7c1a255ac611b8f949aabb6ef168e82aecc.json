{"ast":null,"code":"// features/user.js (Redux Slice)\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nexport const register = createAsyncThunk('user/register', async ({\n  first_name,\n  last_name,\n  email,\n  password\n}, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await fetch('/api/users/register/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        first_name,\n        last_name,\n        email,\n        password\n      })\n    });\n    if (!response.ok) {\n      throw new Error('Failed to register');\n    }\n    const data = await response.json();\n    return data; // Return the user data if successful\n  } catch (error) {\n    return rejectWithValue(error.message); // Return the error message\n  }\n});\n\n// Slice setup\nconst userSlice = createSlice({\n  name: 'user',\n  initialState: {\n    registered: false,\n    error: null\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(register.fulfilled, state => {\n      state.registered = true;\n      state.error = null; // Clear any previous errors\n    }).addCase(register.rejected, (state, action) => {\n      state.error = action.payload; // Store error message\n    });\n  }\n});\nexport default userSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","register","first_name","last_name","email","password","rejectWithValue","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","error","message","userSlice","name","initialState","registered","reducers","extraReducers","builder","addCase","fulfilled","state","rejected","action","payload","reducer"],"sources":["D:/Desktop/authentication2/frontend/client/src/containers/RegisterPage.jsx"],"sourcesContent":["// features/user.js (Redux Slice)\r\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\nexport const register = createAsyncThunk(\r\n  'user/register',\r\n  async ({ first_name, last_name, email, password }, { rejectWithValue }) => {\r\n    try {\r\n      const response = await fetch('/api/users/register/', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ first_name, last_name, email, password }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to register');\r\n      }\r\n\r\n      const data = await response.json();\r\n      return data; // Return the user data if successful\r\n    } catch (error) {\r\n      return rejectWithValue(error.message); // Return the error message\r\n    }\r\n  }\r\n);\r\n\r\n// Slice setup\r\nconst userSlice = createSlice({\r\n  name: 'user',\r\n  initialState: {\r\n    registered: false,\r\n    error: null,\r\n  },\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(register.fulfilled, (state) => {\r\n        state.registered = true;\r\n        state.error = null; // Clear any previous errors\r\n      })\r\n      .addCase(register.rejected, (state, action) => {\r\n        state.error = action.payload; // Store error message\r\n      });\r\n  },\r\n});\r\n\r\nexport default userSlice.reducer;\r\n"],"mappings":"AAAA;AACA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAEhE,OAAO,MAAMC,QAAQ,GAAGD,gBAAgB,CACtC,eAAe,EACf,OAAO;EAAEE,UAAU;EAAEC,SAAS;EAAEC,KAAK;EAAEC;AAAS,CAAC,EAAE;EAAEC;AAAgB,CAAC,KAAK;EACzE,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,sBAAsB,EAAE;MACnDC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEX,UAAU;QAAEC,SAAS;QAAEC,KAAK;QAAEC;MAAS,CAAC;IACjE,CAAC,CAAC;IAEF,IAAI,CAACE,QAAQ,CAACO,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,oBAAoB,CAAC;IACvC;IAEA,MAAMC,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI,CAAC,CAAC;EACf,CAAC,CAAC,OAAOE,KAAK,EAAE;IACd,OAAOZ,eAAe,CAACY,KAAK,CAACC,OAAO,CAAC,CAAC,CAAC;EACzC;AACF,CACF,CAAC;;AAED;AACA,MAAMC,SAAS,GAAGrB,WAAW,CAAC;EAC5BsB,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IACZC,UAAU,EAAE,KAAK;IACjBL,KAAK,EAAE;EACT,CAAC;EACDM,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAAC1B,QAAQ,CAAC2B,SAAS,EAAGC,KAAK,IAAK;MACtCA,KAAK,CAACN,UAAU,GAAG,IAAI;MACvBM,KAAK,CAACX,KAAK,GAAG,IAAI,CAAC,CAAC;IACtB,CAAC,CAAC,CACDS,OAAO,CAAC1B,QAAQ,CAAC6B,QAAQ,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MAC7CF,KAAK,CAACX,KAAK,GAAGa,MAAM,CAACC,OAAO,CAAC,CAAC;IAChC,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,eAAeZ,SAAS,CAACa,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}